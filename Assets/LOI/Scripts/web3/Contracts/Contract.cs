using System;
using System.Threading.Tasks;
using System.Collections.Generic;
using System.Numerics;
using Nethereum.Hex.HexTypes;
using Nethereum.ABI.FunctionEncoding.Attributes;
using Nethereum.Web3;
using Nethereum.RPC.Eth.DTOs;
using Nethereum.Contracts.CQS;
using Nethereum.Contracts;
using System.Threading;




    public class NoxLands
    {
        public static async Task Main()
        {
            //var url = "http://testchain.nethereum.com:8545";
            ////var url = "https://mainnet.infura.io";
            //var privateKey = "0x7580e7fb49df1c861f0050fae31c2224c6aba908e116b8da44ee8cd927b990b0";
            //var account = new Nethereum.Web3.Accounts.Account(privateKey);
            //var web3 = new Web3(account, url);

            /* Deployment 
           var noxLandsDeployment = new NoxLandsDeployment();

           var transactionReceiptDeployment = await web3.Eth.GetContractDeploymentHandler<NoxLandsDeployment>().SendRequestAndWaitForReceiptAsync(noxLandsDeployment);
           var contractAddress = transactionReceiptDeployment.ContractAddress;
            */
            //var contractHandler = web3.Eth.GetContractHandler(contractAddress);

            /** Function: AssetList**/
            /*
            var assetListFunction = new AssetListFunction();
            assetListFunction.ReturnValue1 = returnValue1;
            assetListFunction.ReturnValue2 = returnValue2;
            assetListFunction.ReturnValue3 = returnValue3;
            var assetListFunctionReturn = await contractHandler.QueryAsync<AssetListFunction, string>(assetListFunction);
            */


            /** Function: Assets**/
            /*
            var assetsFunction = new AssetsFunction();
            assetsFunction.ReturnValue1 = returnValue1;
            var assetsFunctionReturn = await contractHandler.QueryAsync<AssetsFunction, BigInteger>(assetsFunction);
            */


            /** Function: BARRACK**/
            /*
            var bARRACKFunctionReturn = await contractHandler.QueryAsync<BARRACKFunction, BigInteger>();
            */


            /** Function: BARRACK_BUILD_TIME**/
            /*
            var bARRACK_BUILD_TIMEFunctionReturn = await contractHandler.QueryAsync<BARRACK_BUILD_TIMEFunction, BigInteger>();
            */


            /** Function: BUILDER_HUT**/
            /*
            var bUILDER_HUTFunctionReturn = await contractHandler.QueryAsync<BUILDER_HUTFunction, BigInteger>();
            */


            /** Function: BUILDER_HUT_BUILD_TIME**/
            /*
            var bUILDER_HUT_BUILD_TIMEFunctionReturn = await contractHandler.QueryAsync<BUILDER_HUT_BUILD_TIMEFunction, BigInteger>();
            */


            /** Function: BuildTime**/
            /*
            var buildTimeFunction = new BuildTimeFunction();
            buildTimeFunction.ReturnValue1 = returnValue1;
            var buildTimeFunctionReturn = await contractHandler.QueryAsync<BuildTimeFunction, BigInteger>(buildTimeFunction);
            */


            /** Function: BuilderStatus**/
            /*
            var builderStatusFunction = new BuilderStatusFunction();
            builderStatusFunction.ReturnValue1 = returnValue1;
            var builderStatusFunctionReturn = await contractHandler.QueryAsync<BuilderStatusFunction, BigInteger>(builderStatusFunction);
            */


            /** Function: CAMP**/
            /*
            var cAMPFunctionReturn = await contractHandler.QueryAsync<CAMPFunction, BigInteger>();
            */


            /** Function: CAMP_BUILD_TIME**/
            /*
            var cAMP_BUILD_TIMEFunctionReturn = await contractHandler.QueryAsync<CAMP_BUILD_TIMEFunction, BigInteger>();
            */


            /** Function: CANNON**/
            /*
            var cANNONFunctionReturn = await contractHandler.QueryAsync<CANNONFunction, BigInteger>();
            */


            /** Function: CANNON_BUILD_TIME**/
            /*
            var cANNON_BUILD_TIMEFunctionReturn = await contractHandler.QueryAsync<CANNON_BUILD_TIMEFunction, BigInteger>();
            */


            /** Function: GEM_BOX**/
            /*
            var gEM_BOXFunctionReturn = await contractHandler.QueryAsync<GEM_BOXFunction, BigInteger>();
            */


            /** Function: GEM_BOX_BUILD_TIME**/
            /*
            var gEM_BOX_BUILD_TIMEFunctionReturn = await contractHandler.QueryAsync<GEM_BOX_BUILD_TIMEFunction, BigInteger>();
            */


            /** Function: GOLD_BOX**/
            /*
            var gOLD_BOXFunctionReturn = await contractHandler.QueryAsync<GOLD_BOXFunction, BigInteger>();
            */


            /** Function: GOLD_BOX_BUILD_TIME**/
            /*
            var gOLD_BOX_BUILD_TIMEFunctionReturn = await contractHandler.QueryAsync<GOLD_BOX_BUILD_TIMEFunction, BigInteger>();
            */


            /** Function: IsBuilding**/
            /*
            var isBuildingFunction = new IsBuildingFunction();
            isBuildingFunction.ReturnValue1 = returnValue1;
            isBuildingFunction.ReturnValue2 = returnValue2;
            var isBuildingFunctionReturn = await contractHandler.QueryAsync<IsBuildingFunction, bool>(isBuildingFunction);
            */


            /** Function: NOX**/
            /*
            var nOXFunctionReturn = await contractHandler.QueryAsync<NOXFunction, BigInteger>();
            */


            /** Function: TOWER**/
            /*
            var tOWERFunctionReturn = await contractHandler.QueryAsync<TOWERFunction, BigInteger>();
            */


            /** Function: TOWER_BUILD_TIME**/
            /*
            var tOWER_BUILD_TIMEFunctionReturn = await contractHandler.QueryAsync<TOWER_BUILD_TIMEFunction, BigInteger>();
            */


            /** Function: balanceOf**/
            /*
            var balanceOfFunction = new BalanceOfFunction();
            balanceOfFunction.Account = account;
            balanceOfFunction.Id = id;
            var balanceOfFunctionReturn = await contractHandler.QueryAsync<BalanceOfFunction, BigInteger>(balanceOfFunction);
            */


            /** Function: balanceOfBatch**/
            /*
            var balanceOfBatchFunction = new BalanceOfBatchFunction();
            balanceOfBatchFunction.Accounts = accounts;
            balanceOfBatchFunction.Ids = ids;
            var balanceOfBatchFunctionReturn = await contractHandler.QueryAsync<BalanceOfBatchFunction, List<BigInteger>>(balanceOfBatchFunction);
            */


            /** Function: buildNewAsset**/
            /*
            var buildNewAssetFunction = new BuildNewAssetFunction();
            buildNewAssetFunction.Asset = asset;
            buildNewAssetFunction.X = x;
            buildNewAssetFunction.Y = y;
            var buildNewAssetFunctionTxnReceipt = await contractHandler.SendRequestAndWaitForReceiptAsync(buildNewAssetFunction);
            */


            /** Function: getAssets**/
            /*
            var getAssetsFunction = new GetAssetsFunction();
            getAssetsFunction.Asset = asset;
            var getAssetsFunctionReturn = await contractHandler.QueryAsync<GetAssetsFunction, List<string>>(getAssetsFunction);
            */


            /** Function: getCurrentlyBuildingAsset**/
            /*
            var getCurrentlyBuildingAssetFunctionReturn = await contractHandler.QueryAsync<GetCurrentlyBuildingAssetFunction, BigInteger>();
            */


            /** Function: initialize**/
            /*
            var initializeFunctionTxnReceipt = await contractHandler.SendRequestAndWaitForReceiptAsync<InitializeFunction>();
            */


            /** Function: isApprovedForAll**/
            /*
            var isApprovedForAllFunction = new IsApprovedForAllFunction();
            isApprovedForAllFunction.Account = account;
            isApprovedForAllFunction.Operator = operator;
            var isApprovedForAllFunctionReturn = await contractHandler.QueryAsync<IsApprovedForAllFunction, bool>(isApprovedForAllFunction);
            */


            /** Function: isBuilderFree**/
            /*
            var isBuilderFreeFunctionReturn = await contractHandler.QueryAsync<IsBuilderFreeFunction, bool>();
            */


            /** Function: safeBatchTransferFrom**/
            /*
            var safeBatchTransferFromFunction = new SafeBatchTransferFromFunction();
            safeBatchTransferFromFunction.From = from;
            safeBatchTransferFromFunction.To = to;
            safeBatchTransferFromFunction.Ids = ids;
            safeBatchTransferFromFunction.Amounts = amounts;
            safeBatchTransferFromFunction.Data = data;
            var safeBatchTransferFromFunctionTxnReceipt = await contractHandler.SendRequestAndWaitForReceiptAsync(safeBatchTransferFromFunction);
            */


            /** Function: safeTransferFrom**/
            /*
            var safeTransferFromFunction = new SafeTransferFromFunction();
            safeTransferFromFunction.From = from;
            safeTransferFromFunction.To = to;
            safeTransferFromFunction.Id = id;
            safeTransferFromFunction.Amount = amount;
            safeTransferFromFunction.Data = data;
            var safeTransferFromFunctionTxnReceipt = await contractHandler.SendRequestAndWaitForReceiptAsync(safeTransferFromFunction);
            */


            /** Function: setApprovalForAll**/
            /*
            var setApprovalForAllFunction = new SetApprovalForAllFunction();
            setApprovalForAllFunction.Operator = operator;
            setApprovalForAllFunction.Approved = approved;
            var setApprovalForAllFunctionTxnReceipt = await contractHandler.SendRequestAndWaitForReceiptAsync(setApprovalForAllFunction);
            */


            /** Function: supportsInterface**/
            /*
            var supportsInterfaceFunction = new SupportsInterfaceFunction();
            supportsInterfaceFunction.InterfaceId = interfaceId;
            var supportsInterfaceFunctionReturn = await contractHandler.QueryAsync<SupportsInterfaceFunction, bool>(supportsInterfaceFunction);
            */


            /** Function: uri**/
            /*
            var uriFunction = new UriFunction();
            uriFunction.ReturnValue1 = returnValue1;
            var uriFunctionReturn = await contractHandler.QueryAsync<UriFunction, string>(uriFunction);
            */
        }

    }

    public partial class NoxLandsDeployment : NoxLandsDeploymentBase
    {
        public NoxLandsDeployment() : base(BYTECODE) { }
        public NoxLandsDeployment(string byteCode) : base(byteCode) { }
    }

    public class NoxLandsDeploymentBase : ContractDeploymentMessage
    {
        public static string BYTECODE = "0x608060405234801561001057600080fd5b50600436106101fa5760003560e01c8063649d43681161011a578063a3130d4d116100ad578063dba7d7791161007c578063dba7d779146105e1578063e6837fea146105ff578063e985e9c51461061d578063f242432a1461064d578063f295836514610669576101fa565b8063a3130d4d14610547578063af885d5714610563578063cc75a4b614610581578063d9212164146105b1576101fa565b8063947be2f2116100e9578063947be2f2146104d1578063988e7946146104ef5780639c856b5d1461050d578063a22cb4651461052b576101fa565b8063649d43681461045b5780638129fc1c1461048b578063894287b0146104955780638eeee932146104b3576101fa565b806332f5796211610192578063544856231161016157806354485623146103bf57806356b0c6f2146103ef5780635fcd35001461040d578063620d70ee1461042b576101fa565b806332f57962146103235780634b4a80ba146103415780634dce7105146103715780634e1273f41461038f576101fa565b80630e89341c116101ce5780630e89341c1461029b5780630fcddf6f146102cb57806323342e8b146102e95780632eb2c2d614610307576101fa565b8062fdd58e146101ff57806301ffc9a71461022f578063044255d21461025f57806307fb3aac1461027d575b600080fd5b6102196004803603810190610214919061306b565b610687565b6040516102269190613a5c565b60405180910390f35b61024960048036038101906102449190613162565b610751565b604051610256919061380f565b60405180910390f35b610267610833565b6040516102749190613a5c565b60405180910390f35b6102856108cc565b6040516102929190613a5c565b60405180910390f35b6102b560048036038101906102b091906131b4565b6108d1565b6040516102c2919061382a565b60405180910390f35b6102d3610965565b6040516102e09190613a5c565b60405180910390f35b6102f161096a565b6040516102fe9190613a5c565b60405180910390f35b610321600480360381019061031c9190612ee1565b61096f565b005b61032b610a10565b6040516103389190613a5c565b60405180910390f35b61035b600480360381019061035691906131b4565b610a15565b6040516103689190613a5c565b60405180910390f35b610379610a30565b6040516103869190613a5c565b60405180910390f35b6103a960048036038101906103a491906130f6565b610a35565b6040516103b691906137b6565b60405180910390f35b6103d960048036038101906103d491906131b4565b610be6565b6040516103e69190613a5c565b60405180910390f35b6103f7610c01565b6040516104049190613a5c565b60405180910390f35b610415610c06565b6040516104229190613a5c565b60405180910390f35b61044560048036038101906104409190612e7c565b610c0b565b6040516104529190613a5c565b60405180910390f35b610475600480360381019061047091906130a7565b610c23565b604051610482919061382a565b60405180910390f35b610493610ce9565b005b61049d610eff565b6040516104aa9190613a5c565b60405180910390f35b6104bb610f04565b6040516104c89190613a5c565b60405180910390f35b6104d9610f09565b6040516104e69190613a5c565b60405180910390f35b6104f7610f0e565b604051610504919061380f565b60405180910390f35b61051561106f565b6040516105229190613a5c565b60405180910390f35b6105456004803603810190610540919061302f565b611074565b005b610561600480360381019061055c91906131dd565b61108a565b005b61056b611489565b6040516105789190613a5c565b60405180910390f35b61059b6004803603810190610596919061306b565b61148e565b6040516105a8919061380f565b60405180910390f35b6105cb60048036038101906105c691906131b4565b6114bd565b6040516105d89190613794565b60405180910390f35b6105e96115e6565b6040516105f69190613a5c565b60405180910390f35b6106076115eb565b6040516106149190613a5c565b60405180910390f35b61063760048036038101906106329190612ea5565b6115f0565b604051610644919061380f565b60405180910390f35b61066760048036038101906106629190612fa0565b611684565b005b610671611725565b60405161067e9190613a5c565b60405180910390f35b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156106f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ef906138bc565b60405180910390fd5b6065600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061081c57507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061082c575061082b8261172a565b5b9050919050565b600080600090505b60078110156108c35760a660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060009054906101000a900460ff16156108b057809150506108c9565b80806108bb90613de8565b91505061083b565b50600090505b90565b600181565b6060606780546108e090613d85565b80601f016020809104026020016040519081016040528092919081815260200182805461090c90613d85565b80156109595780601f1061092e57610100808354040283529160200191610959565b820191906000526020600020905b81548152906001019060200180831161093c57829003601f168201915b50505050509050919050565b603c81565b603c81565b610977611794565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614806109bd57506109bc856109b7611794565b6115f0565b5b6109fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f39061395c565b60405180910390fd5b610a09858585858561179c565b5050505050565b600281565b60978160078110610a2557600080fd5b016000915090505481565b603c81565b60608151835114610a7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a72906139fc565b60405180910390fd5b6000835167ffffffffffffffff811115610abe577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610aec5781602001602082028036833780820191505090505b50905060005b8451811015610bdb57610b85858281518110610b37577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151858381518110610b78577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151610687565b828281518110610bbe577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505080610bd490613de8565b9050610af2565b508091505092915050565b609e8160068110610bf657600080fd5b016000915090505481565b600781565b603c81565b60a46020528060005260406000206000915090505481565b60a56020528260005260406000206020528160005260406000208181548110610c4b57600080fd5b9060005260206000200160009250925050508054610c6890613d85565b80601f0160208091040260200160405190810160405280929190818152602001828054610c9490613d85565b8015610ce15780601f10610cb657610100808354040283529160200191610ce1565b820191906000526020600020905b815481529060010190602001808311610cc457829003601f168201915b505050505081565b600060019054906101000a900460ff16610d115760008054906101000a900460ff1615610d1a565b610d19611aff565b5b610d59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d509061397c565b60405180910390fd5b60008060019054906101000a900460ff161590508015610da9576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610de76040518060400160405280601181526020017f7465737446756e6374696f6e2d7b69647d000000000000000000000000000000815250611b10565b610e0b336000670de0b6b3a764000060405180602001604052806000815250611b6b565b6040518060e0016040528060018152602001600281526020016003815260200160048152602001600581526020016006815260200160078152506097906007610e55929190612ab4565b506040518060c00160405280601e8152602001603c8152602001603c8152602001603c8152602001603c8152602001603c815250609e906006610e99929190612af4565b506000600190505b6007811015610eda57610ec7338261025860405180602001604052806000815250611b6b565b8080610ed290613de8565b915050610ea1565b508015610efc5760008060016101000a81548160ff0219169083151502179055505b50565b600681565b603c81565b603c81565b6000610f4f6040518060400160405280600e81526020017f63757272656e7420747374616d7000000000000000000000000000000000000081525042611d02565b610fcd6040518060400160405280600d81526020017f6275696c64696e672074696c6c0000000000000000000000000000000000000081525060a460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d02565b4260a460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410806110595750600060a460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b15611067576001905061106c565b600090505b90565b600081565b61108661107f611794565b8383611d9e565b5050565b6110c96040518060400160405280600e81526020017f63757272656e7420747374616d7000000000000000000000000000000000000081525042611d02565b6111476040518060400160405280600d81526020017f6275696c64696e672074696c6c0000000000000000000000000000000000000081525060a460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d02565b4260a460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410806111d35750600060a460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b611212576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112099061391c565b60405180910390fd5b60078310611255576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124c906138dc565b60405180910390fd5b61125f3384611f0b565b611268336120be565b609e83600681106112a2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b0154426112af9190613c45565b60a460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060a560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002082826040516020016113559291906136a3565b60405160208183030381529060405290806001815401808255809150506001900390600052602060002001600090919091909150908051906020019061139c929190612b34565b50600160a660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060006101000a81548160ff0219169083151502179055506114846040518060400160405280601581526020017f73746172746564206275696c64696e672074696c6c000000000000000000000081525060a460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d02565b505050565b600381565b60a66020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b606060a560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156115db57838290600052602060002001805461154e90613d85565b80601f016020809104026020016040519081016040528092919081815260200182805461157a90613d85565b80156115c75780601f1061159c576101008083540402835291602001916115c7565b820191906000526020600020905b8154815290600101906020018083116115aa57829003601f168201915b50505050508152602001906001019061152f565b505050509050919050565b600581565b601e81565b6000606660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61168c611794565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614806116d257506116d1856116cc611794565b6115f0565b5b611711576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611708906138fc565b60405180910390fd5b61171e85858585856122d2565b5050505050565b600481565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b81518351146117e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117d790613a1c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415611850576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118479061393c565b60405180910390fd5b600061185a611794565b905061186a818787878787612557565b60005b8451811015611a6a5760008582815181106118b1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151905060008583815181106118f6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151905060006065600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611998576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161198f9061399c565b60405180910390fd5b8181036065600085815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816065600085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611a4f9190613c45565b9250508190555050505080611a6390613de8565b905061186d565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611ae19291906137d8565b60405180910390a4611af781878787878761255f565b505050505050565b6000611b0a30612746565b15905090565b600060019054906101000a900460ff16611b5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b56906139bc565b60405180910390fd5b611b6881612769565b50565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415611bdb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bd290613a3c565b60405180910390fd5b6000611be5611794565b9050611c0681600087611bf7886127c4565b611c00886127c4565b87612557565b826065600086815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611c669190613c45565b925050819055508473ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628787604051611ce4929190613a77565b60405180910390a4611cfb8160008787878761288a565b5050505050565b611d9a8282604051602401611d1892919061384c565b6040516020818303038152906040527f9710a9d0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612a71565b5050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611e0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e04906139dc565b60405180910390fd5b80606660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611efe919061380f565b60405180910390a3505050565b60005b60078110156120b957611f213383610687565b60a560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000208054905011156120a65760005b60a560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002080549050611fdc3385610687565b611fe69190613c9b565b8110156120a45760a560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020805480612073577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b60019003818190600052602060002001600061208f9190612bba565b9055808061209c90613de8565b915050611f7e565b505b80806120b190613de8565b915050611f0e565b505050565b6120fd6040518060400160405280600e81526020017f63757272656e7420747374616d7000000000000000000000000000000000000081525042611d02565b61217b6040518060400160405280600d81526020017f6275696c64696e672074696c6c0000000000000000000000000000000000000081525060a460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d02565b4260a460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410806122075750600060a460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b612246576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161223d9061391c565b60405180910390fd5b60005b60078110156122ce57600060a660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff02191690831515021790555080806122c690613de8565b915050612249565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415612342576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123399061393c565b60405180910390fd5b600061234c611794565b905061236c81878761235d886127c4565b612366886127c4565b87612557565b60006065600086815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905083811015612404576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123fb9061399c565b60405180910390fd5b8381036065600087815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550836065600087815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546124bb9190613c45565b925050819055508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628888604051612538929190613a77565b60405180910390a461254e82888888888861288a565b50505050505050565b505050505050565b61257e8473ffffffffffffffffffffffffffffffffffffffff16612746565b1561273e578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b81526004016125c49594939291906136d2565b602060405180830381600087803b1580156125de57600080fd5b505af192505050801561260f57506040513d601f19601f8201168201806040525081019061260c919061318b565b60015b6126b55761261b613ebe565b806308c379a01415612678575061263061437c565b8061263b575061267a565b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161266f919061382a565b60405180910390fd5b505b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126ac9061387c565b60405180910390fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461273c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127339061389c565b60405180910390fd5b505b505050505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff166127b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127af906139bc565b60405180910390fd5b6127c181612a9a565b50565b60606000600167ffffffffffffffff811115612809577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156128375781602001602082028036833780820191505090505b5090508281600081518110612875577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505080915050919050565b6128a98473ffffffffffffffffffffffffffffffffffffffff16612746565b15612a69578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b81526004016128ef95949392919061373a565b602060405180830381600087803b15801561290957600080fd5b505af192505050801561293a57506040513d601f19601f82011682018060405250810190612937919061318b565b60015b6129e057612946613ebe565b806308c379a014156129a3575061295b61437c565b8061296657506129a5565b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161299a919061382a565b60405180910390fd5b505b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129d79061387c565b60405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614612a67576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a5e9061389c565b60405180910390fd5b505b505050505050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b8060679080519060200190612ab0929190612b34565b5050565b8260078101928215612ae3579160200282015b82811115612ae2578251825591602001919060010190612ac7565b5b509050612af09190612bfa565b5090565b8260068101928215612b23579160200282015b82811115612b22578251825591602001919060010190612b07565b5b509050612b309190612bfa565b5090565b828054612b4090613d85565b90600052602060002090601f016020900481019282612b625760008555612ba9565b82601f10612b7b57805160ff1916838001178555612ba9565b82800160010185558215612ba9579182015b82811115612ba8578251825591602001919060010190612b8d565b5b509050612bb69190612bfa565b5090565b508054612bc690613d85565b6000825580601f10612bd85750612bf7565b601f016020900490600052602060002090810190612bf69190612bfa565b5b50565b5b80821115612c13576000816000905550600101612bfb565b5090565b6000612c2a612c2584613ac5565b613aa0565b90508083825260208201905082856020860282011115612c4957600080fd5b60005b85811015612c795781612c5f8882612d6b565b845260208401935060208301925050600181019050612c4c565b5050509392505050565b6000612c96612c9184613af1565b613aa0565b90508083825260208201905082856020860282011115612cb557600080fd5b60005b85811015612ce55781612ccb8882612e67565b845260208401935060208301925050600181019050612cb8565b5050509392505050565b6000612d02612cfd84613b1d565b613aa0565b905082815260208101848484011115612d1a57600080fd5b612d25848285613d43565b509392505050565b6000612d40612d3b84613b4e565b613aa0565b905082815260208101848484011115612d5857600080fd5b612d63848285613d43565b509392505050565b600081359050612d7a81614412565b92915050565b600082601f830112612d9157600080fd5b8135612da1848260208601612c17565b91505092915050565b600082601f830112612dbb57600080fd5b8135612dcb848260208601612c83565b91505092915050565b600081359050612de381614429565b92915050565b600081359050612df881614440565b92915050565b600081519050612e0d81614440565b92915050565b600082601f830112612e2457600080fd5b8135612e34848260208601612cef565b91505092915050565b600082601f830112612e4e57600080fd5b8135612e5e848260208601612d2d565b91505092915050565b600081359050612e7681614457565b92915050565b600060208284031215612e8e57600080fd5b6000612e9c84828501612d6b565b91505092915050565b60008060408385031215612eb857600080fd5b6000612ec685828601612d6b565b9250506020612ed785828601612d6b565b9150509250929050565b600080600080600060a08688031215612ef957600080fd5b6000612f0788828901612d6b565b9550506020612f1888828901612d6b565b945050604086013567ffffffffffffffff811115612f3557600080fd5b612f4188828901612daa565b935050606086013567ffffffffffffffff811115612f5e57600080fd5b612f6a88828901612daa565b925050608086013567ffffffffffffffff811115612f8757600080fd5b612f9388828901612e13565b9150509295509295909350565b600080600080600060a08688031215612fb857600080fd5b6000612fc688828901612d6b565b9550506020612fd788828901612d6b565b9450506040612fe888828901612e67565b9350506060612ff988828901612e67565b925050608086013567ffffffffffffffff81111561301657600080fd5b61302288828901612e13565b9150509295509295909350565b6000806040838503121561304257600080fd5b600061305085828601612d6b565b925050602061306185828601612dd4565b9150509250929050565b6000806040838503121561307e57600080fd5b600061308c85828601612d6b565b925050602061309d85828601612e67565b9150509250929050565b6000806000606084860312156130bc57600080fd5b60006130ca86828701612d6b565b93505060206130db86828701612e67565b92505060406130ec86828701612e67565b9150509250925092565b6000806040838503121561310957600080fd5b600083013567ffffffffffffffff81111561312357600080fd5b61312f85828601612d80565b925050602083013567ffffffffffffffff81111561314c57600080fd5b61315885828601612daa565b9150509250929050565b60006020828403121561317457600080fd5b600061318284828501612de9565b91505092915050565b60006020828403121561319d57600080fd5b60006131ab84828501612dfe565b91505092915050565b6000602082840312156131c657600080fd5b60006131d484828501612e67565b91505092915050565b6000806000606084860312156131f257600080fd5b600061320086828701612e67565b935050602084013567ffffffffffffffff81111561321d57600080fd5b61322986828701612e3d565b925050604084013567ffffffffffffffff81111561324657600080fd5b61325286828701612e3d565b9150509250925092565b600061326883836133b2565b905092915050565b600061327c8383613685565b60208301905092915050565b61329181613ccf565b82525050565b60006132a282613b9f565b6132ac8185613be5565b9350836020820285016132be85613b7f565b8060005b858110156132fa57848403895281516132db858261325c565b94506132e683613bcb565b925060208a019950506001810190506132c2565b50829750879550505050505092915050565b600061331782613baa565b6133218185613bf6565b935061332c83613b8f565b8060005b8381101561335d5781516133448882613270565b975061334f83613bd8565b925050600181019050613330565b5085935050505092915050565b61337381613ce1565b82525050565b600061338482613bb5565b61338e8185613c07565b935061339e818560208601613d52565b6133a781613ee0565b840191505092915050565b60006133bd82613bc0565b6133c78185613c18565b93506133d7818560208601613d52565b6133e081613ee0565b840191505092915050565b60006133f682613bc0565b6134008185613c29565b9350613410818560208601613d52565b61341981613ee0565b840191505092915050565b600061342f82613bc0565b6134398185613c3a565b9350613449818560208601613d52565b80840191505092915050565b6000613462603483613c29565b915061346d82613efe565b604082019050919050565b6000613485602883613c29565b915061349082613f4d565b604082019050919050565b60006134a8602b83613c29565b91506134b382613f9c565b604082019050919050565b60006134cb600d83613c29565b91506134d682613feb565b602082019050919050565b60006134ee602983613c29565b91506134f982614014565b604082019050919050565b6000613511601483613c29565b915061351c82614063565b602082019050919050565b6000613534602583613c29565b915061353f8261408c565b604082019050919050565b6000613557603283613c29565b9150613562826140db565b604082019050919050565b600061357a602e83613c29565b91506135858261412a565b604082019050919050565b600061359d602a83613c29565b91506135a882614179565b604082019050919050565b60006135c0600183613c3a565b91506135cb826141c8565b600182019050919050565b60006135e3602b83613c29565b91506135ee826141f1565b604082019050919050565b6000613606602983613c29565b915061361182614240565b604082019050919050565b6000613629602983613c29565b91506136348261428f565b604082019050919050565b600061364c602883613c29565b9150613657826142de565b604082019050919050565b600061366f602183613c29565b915061367a8261432d565b604082019050919050565b61368e81613d39565b82525050565b61369d81613d39565b82525050565b60006136af8285613424565b91506136ba826135b3565b91506136c68284613424565b91508190509392505050565b600060a0820190506136e76000830188613288565b6136f46020830187613288565b8181036040830152613706818661330c565b9050818103606083015261371a818561330c565b9050818103608083015261372e8184613379565b90509695505050505050565b600060a08201905061374f6000830188613288565b61375c6020830187613288565b6137696040830186613694565b6137766060830185613694565b81810360808301526137888184613379565b90509695505050505050565b600060208201905081810360008301526137ae8184613297565b905092915050565b600060208201905081810360008301526137d0818461330c565b905092915050565b600060408201905081810360008301526137f2818561330c565b90508181036020830152613806818461330c565b90509392505050565b6000602082019050613824600083018461336a565b92915050565b6000602082019050818103600083015261384481846133eb565b905092915050565b6000604082019050818103600083015261386681856133eb565b90506138756020830184613694565b9392505050565b6000602082019050818103600083015261389581613455565b9050919050565b600060208201905081810360008301526138b581613478565b9050919050565b600060208201905081810360008301526138d58161349b565b9050919050565b600060208201905081810360008301526138f5816134be565b9050919050565b60006020820190508181036000830152613915816134e1565b9050919050565b6000602082019050818103600083015261393581613504565b9050919050565b6000602082019050818103600083015261395581613527565b9050919050565b600060208201905081810360008301526139758161354a565b9050919050565b600060208201905081810360008301526139958161356d565b9050919050565b600060208201905081810360008301526139b581613590565b9050919050565b600060208201905081810360008301526139d5816135d6565b9050919050565b600060208201905081810360008301526139f5816135f9565b9050919050565b60006020820190508181036000830152613a158161361c565b9050919050565b60006020820190508181036000830152613a358161363f565b9050919050565b60006020820190508181036000830152613a5581613662565b9050919050565b6000602082019050613a716000830184613694565b92915050565b6000604082019050613a8c6000830185613694565b613a996020830184613694565b9392505050565b6000613aaa613abb565b9050613ab68282613db7565b919050565b6000604051905090565b600067ffffffffffffffff821115613ae057613adf613e8f565b5b602082029050602081019050919050565b600067ffffffffffffffff821115613b0c57613b0b613e8f565b5b602082029050602081019050919050565b600067ffffffffffffffff821115613b3857613b37613e8f565b5b613b4182613ee0565b9050602081019050919050565b600067ffffffffffffffff821115613b6957613b68613e8f565b5b613b7282613ee0565b9050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000613c5082613d39565b9150613c5b83613d39565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613c9057613c8f613e31565b5b828201905092915050565b6000613ca682613d39565b9150613cb183613d39565b925082821015613cc457613cc3613e31565b5b828203905092915050565b6000613cda82613d19565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015613d70578082015181840152602081019050613d55565b83811115613d7f576000848401525b50505050565b60006002820490506001821680613d9d57607f821691505b60208210811415613db157613db0613e60565b5b50919050565b613dc082613ee0565b810181811067ffffffffffffffff82111715613ddf57613dde613e8f565b5b80604052505050565b6000613df382613d39565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415613e2657613e25613e31565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060033d1115613edd5760046000803e613eda600051613ef1565b90505b90565b6000601f19601f8301169050919050565b60008160e01c9050919050565b7f455243313135353a207472616e7366657220746f206e6f6e204552433131353560008201527f526563656976657220696d706c656d656e746572000000000000000000000000602082015250565b7f455243313135353a204552433131353552656365697665722072656a6563746560008201527f6420746f6b656e73000000000000000000000000000000000000000000000000602082015250565b7f455243313135353a2062616c616e636520717565727920666f7220746865207a60008201527f65726f2061646472657373000000000000000000000000000000000000000000602082015250565b7f696e76616c696420617373657400000000000000000000000000000000000000600082015250565b7f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260008201527f20617070726f7665640000000000000000000000000000000000000000000000602082015250565b7f4275696c646572206973206e6f74206672656565000000000000000000000000600082015250565b7f455243313135353a207472616e7366657220746f20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f455243313135353a207472616e736665722063616c6c6572206973206e6f742060008201527f6f776e6572206e6f7220617070726f7665640000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f455243313135353a20696e73756666696369656e742062616c616e636520666f60008201527f72207472616e7366657200000000000000000000000000000000000000000000602082015250565b7f3a00000000000000000000000000000000000000000000000000000000000000600082015250565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b7f455243313135353a2073657474696e6720617070726f76616c2073746174757360008201527f20666f722073656c660000000000000000000000000000000000000000000000602082015250565b7f455243313135353a206163636f756e747320616e6420696473206c656e67746860008201527f206d69736d617463680000000000000000000000000000000000000000000000602082015250565b7f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060008201527f6d69736d61746368000000000000000000000000000000000000000000000000602082015250565b7f455243313135353a206d696e7420746f20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b600060443d101561438c5761440f565b614394613abb565b60043d036004823e80513d602482011167ffffffffffffffff821117156143bc57505061440f565b808201805167ffffffffffffffff8111156143da575050505061440f565b80602083010160043d0385018111156143f757505050505061440f565b61440682602001850186613db7565b82955050505050505b90565b61441b81613ccf565b811461442657600080fd5b50565b61443281613ce1565b811461443d57600080fd5b50565b61444981613ced565b811461445457600080fd5b50565b61446081613d39565b811461446b57600080fd5b5056fea26469706673582212201ac033f57ea92d2cdde377571d99e0d91575b4e710f2d78dbdde3c4bb701760064736f6c63430008040033";
        public NoxLandsDeploymentBase() : base(BYTECODE) { }
        public NoxLandsDeploymentBase(string byteCode) : base(byteCode) { }

    }

    public partial class AssetListFunction : AssetListFunctionBase { }

    [Function("AssetList", "string")]
    public class AssetListFunctionBase : FunctionMessage
    {
        [Parameter("address", "", 1)]
        public virtual string ReturnValue1 { get; set; }
        [Parameter("uint256", "", 2)]
        public virtual BigInteger ReturnValue2 { get; set; }
        [Parameter("uint256", "", 3)]
        public virtual BigInteger ReturnValue3 { get; set; }
    }

    public partial class AssetsFunction : AssetsFunctionBase { }

    [Function("Assets", "uint256")]
    public class AssetsFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class BARRACKFunction : BARRACKFunctionBase { }

    [Function("BARRACK", "uint256")]
    public class BARRACKFunctionBase : FunctionMessage
    {

    }

    public partial class BARRACK_BUILD_TIMEFunction : BARRACK_BUILD_TIMEFunctionBase { }

    [Function("BARRACK_BUILD_TIME", "uint256")]
    public class BARRACK_BUILD_TIMEFunctionBase : FunctionMessage
    {

    }

    public partial class BUILDER_HUTFunction : BUILDER_HUTFunctionBase { }

    [Function("BUILDER_HUT", "uint256")]
    public class BUILDER_HUTFunctionBase : FunctionMessage
    {

    }

    public partial class BUILDER_HUT_BUILD_TIMEFunction : BUILDER_HUT_BUILD_TIMEFunctionBase { }

    [Function("BUILDER_HUT_BUILD_TIME", "uint256")]
    public class BUILDER_HUT_BUILD_TIMEFunctionBase : FunctionMessage
    {

    }

    public partial class BuildTimeFunction : BuildTimeFunctionBase { }

    [Function("BuildTime", "uint256")]
    public class BuildTimeFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class BuilderStatusFunction : BuilderStatusFunctionBase { }

    [Function("BuilderStatus", "uint256")]
    public class BuilderStatusFunctionBase : FunctionMessage
    {
        [Parameter("address", "", 1)]
        public virtual string ReturnValue1 { get; set; }
    }

    public partial class CAMPFunction : CAMPFunctionBase { }

    [Function("CAMP", "uint256")]
    public class CAMPFunctionBase : FunctionMessage
    {

    }

    public partial class CAMP_BUILD_TIMEFunction : CAMP_BUILD_TIMEFunctionBase { }

    [Function("CAMP_BUILD_TIME", "uint256")]
    public class CAMP_BUILD_TIMEFunctionBase : FunctionMessage
    {

    }

    public partial class CANNONFunction : CANNONFunctionBase { }

    [Function("CANNON", "uint256")]
    public class CANNONFunctionBase : FunctionMessage
    {

    }

    public partial class CANNON_BUILD_TIMEFunction : CANNON_BUILD_TIMEFunctionBase { }

    [Function("CANNON_BUILD_TIME", "uint256")]
    public class CANNON_BUILD_TIMEFunctionBase : FunctionMessage
    {

    }

    public partial class GEM_BOXFunction : GEM_BOXFunctionBase { }

    [Function("GEM_BOX", "uint256")]
    public class GEM_BOXFunctionBase : FunctionMessage
    {

    }

    public partial class GEM_BOX_BUILD_TIMEFunction : GEM_BOX_BUILD_TIMEFunctionBase { }

    [Function("GEM_BOX_BUILD_TIME", "uint256")]
    public class GEM_BOX_BUILD_TIMEFunctionBase : FunctionMessage
    {

    }

    public partial class GOLD_BOXFunction : GOLD_BOXFunctionBase { }

    [Function("GOLD_BOX", "uint256")]
    public class GOLD_BOXFunctionBase : FunctionMessage
    {

    }

    public partial class GOLD_BOX_BUILD_TIMEFunction : GOLD_BOX_BUILD_TIMEFunctionBase { }

    [Function("GOLD_BOX_BUILD_TIME", "uint256")]
    public class GOLD_BOX_BUILD_TIMEFunctionBase : FunctionMessage
    {

    }

    public partial class IsBuildingFunction : IsBuildingFunctionBase { }

    [Function("IsBuilding", "bool")]
    public class IsBuildingFunctionBase : FunctionMessage
    {
        [Parameter("address", "", 1)]
        public virtual string ReturnValue1 { get; set; }
        [Parameter("uint256", "", 2)]
        public virtual BigInteger ReturnValue2 { get; set; }
    }

    public partial class NOXFunction : NOXFunctionBase { }

    [Function("NOX", "uint256")]
    public class NOXFunctionBase : FunctionMessage
    {

    }

    public partial class TOWERFunction : TOWERFunctionBase { }

    [Function("TOWER", "uint256")]
    public class TOWERFunctionBase : FunctionMessage
    {

    }

    public partial class TOWER_BUILD_TIMEFunction : TOWER_BUILD_TIMEFunctionBase { }

    [Function("TOWER_BUILD_TIME", "uint256")]
    public class TOWER_BUILD_TIMEFunctionBase : FunctionMessage
    {

    }

    public partial class BalanceOfFunction : BalanceOfFunctionBase { }

    [Function("balanceOf", "uint256")]
    public class BalanceOfFunctionBase : FunctionMessage
    {
        [Parameter("address", "account", 1)]
        public virtual string Account { get; set; }
        [Parameter("uint256", "id", 2)]
        public virtual BigInteger Id { get; set; }
    }

    public partial class BalanceOfBatchFunction : BalanceOfBatchFunctionBase { }

    [Function("balanceOfBatch", "uint256[]")]
    public class BalanceOfBatchFunctionBase : FunctionMessage
    {
        [Parameter("address[]", "accounts", 1)]
        public virtual List<string> Accounts { get; set; }
        [Parameter("uint256[]", "ids", 2)]
        public virtual List<BigInteger> Ids { get; set; }
    }

    public partial class BuildNewAssetFunction : BuildNewAssetFunctionBase { }

    [Function("buildNewAsset")]
    public class BuildNewAssetFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "asset", 1)]
        public virtual BigInteger Asset { get; set; }
        [Parameter("string", "x", 2)]
        public virtual string X { get; set; }
        [Parameter("string", "y", 3)]
        public virtual string Y { get; set; }
    }

    public partial class GetAssetsFunction : GetAssetsFunctionBase { }

    [Function("getAssets", "string[]")]
    public class GetAssetsFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "asset", 1)]
        public virtual BigInteger Asset { get; set; }
    }

    public partial class GetCurrentlyBuildingAssetFunction : GetCurrentlyBuildingAssetFunctionBase { }

    [Function("getCurrentlyBuildingAsset", "uint256")]
    public class GetCurrentlyBuildingAssetFunctionBase : FunctionMessage
    {

    }

    public partial class InitializeFunction : InitializeFunctionBase { }

    [Function("initialize")]
    public class InitializeFunctionBase : FunctionMessage
    {

    }

    public partial class IsApprovedForAllFunction : IsApprovedForAllFunctionBase { }

    [Function("isApprovedForAll", "bool")]
    public class IsApprovedForAllFunctionBase : FunctionMessage
    {
        [Parameter("address", "account", 1)]
        public virtual string Account { get; set; }
        [Parameter("address", "operator", 2)]
        public virtual string Operator { get; set; }
    }

    public partial class IsBuilderFreeFunction : IsBuilderFreeFunctionBase { }

    [Function("isBuilderFree", "bool")]
    public class IsBuilderFreeFunctionBase : FunctionMessage
    {

    }

    public partial class SafeBatchTransferFromFunction : SafeBatchTransferFromFunctionBase { }

    [Function("safeBatchTransferFrom")]
    public class SafeBatchTransferFromFunctionBase : FunctionMessage
    {
        [Parameter("address", "from", 1)]
        public virtual string From { get; set; }
        [Parameter("address", "to", 2)]
        public virtual string To { get; set; }
        [Parameter("uint256[]", "ids", 3)]
        public virtual List<BigInteger> Ids { get; set; }
        [Parameter("uint256[]", "amounts", 4)]
        public virtual List<BigInteger> Amounts { get; set; }
        [Parameter("bytes", "data", 5)]
        public virtual byte[] Data { get; set; }
    }

    public partial class SafeTransferFromFunction : SafeTransferFromFunctionBase { }

    [Function("safeTransferFrom")]
    public class SafeTransferFromFunctionBase : FunctionMessage
    {
        [Parameter("address", "from", 1)]
        public virtual string From { get; set; }
        [Parameter("address", "to", 2)]
        public virtual string To { get; set; }
        [Parameter("uint256", "id", 3)]
        public virtual BigInteger Id { get; set; }
        [Parameter("uint256", "amount", 4)]
        public virtual BigInteger Amount { get; set; }
        [Parameter("bytes", "data", 5)]
        public virtual byte[] Data { get; set; }
    }

    public partial class SetApprovalForAllFunction : SetApprovalForAllFunctionBase { }

    [Function("setApprovalForAll")]
    public class SetApprovalForAllFunctionBase : FunctionMessage
    {
        [Parameter("address", "operator", 1)]
        public virtual string Operator { get; set; }
        [Parameter("bool", "approved", 2)]
        public virtual bool Approved { get; set; }
    }

    public partial class SupportsInterfaceFunction : SupportsInterfaceFunctionBase { }

    [Function("supportsInterface", "bool")]
    public class SupportsInterfaceFunctionBase : FunctionMessage
    {
        [Parameter("bytes4", "interfaceId", 1)]
        public virtual byte[] InterfaceId { get; set; }
    }

    public partial class UriFunction : UriFunctionBase { }

    [Function("uri", "string")]
    public class UriFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class ApprovalForAllEventDTO : ApprovalForAllEventDTOBase { }

    [Event("ApprovalForAll")]
    public class ApprovalForAllEventDTOBase : IEventDTO
    {
        [Parameter("address", "account", 1, true)]
        public virtual string Account { get; set; }
        [Parameter("address", "operator", 2, true)]
        public virtual string Operator { get; set; }
        [Parameter("bool", "approved", 3, false)]
        public virtual bool Approved { get; set; }
    }

    public partial class TransferBatchEventDTO : TransferBatchEventDTOBase { }

    [Event("TransferBatch")]
    public class TransferBatchEventDTOBase : IEventDTO
    {
        [Parameter("address", "operator", 1, true)]
        public virtual string Operator { get; set; }
        [Parameter("address", "from", 2, true)]
        public virtual string From { get; set; }
        [Parameter("address", "to", 3, true)]
        public virtual string To { get; set; }
        [Parameter("uint256[]", "ids", 4, false)]
        public virtual List<BigInteger> Ids { get; set; }
        [Parameter("uint256[]", "values", 5, false)]
        public virtual List<BigInteger> Values { get; set; }
    }

    public partial class TransferSingleEventDTO : TransferSingleEventDTOBase { }

    [Event("TransferSingle")]
    public class TransferSingleEventDTOBase : IEventDTO
    {
        [Parameter("address", "operator", 1, true)]
        public virtual string Operator { get; set; }
        [Parameter("address", "from", 2, true)]
        public virtual string From { get; set; }
        [Parameter("address", "to", 3, true)]
        public virtual string To { get; set; }
        [Parameter("uint256", "id", 4, false)]
        public virtual BigInteger Id { get; set; }
        [Parameter("uint256", "value", 5, false)]
        public virtual BigInteger Value { get; set; }
    }

    public partial class URIEventDTO : URIEventDTOBase { }

    [Event("URI")]
    public class URIEventDTOBase : IEventDTO
    {
        [Parameter("string", "value", 1, false)]
        public virtual string Value { get; set; }
        [Parameter("uint256", "id", 2, true)]
        public virtual BigInteger Id { get; set; }
    }

    public partial class AssetListOutputDTO : AssetListOutputDTOBase { }

    [FunctionOutput]
    public class AssetListOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("string", "", 1)]
        public virtual string ReturnValue1 { get; set; }
    }

    public partial class AssetsOutputDTO : AssetsOutputDTOBase { }

    [FunctionOutput]
    public class AssetsOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class BARRACKOutputDTO : BARRACKOutputDTOBase { }

    [FunctionOutput]
    public class BARRACKOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class BARRACK_BUILD_TIMEOutputDTO : BARRACK_BUILD_TIMEOutputDTOBase { }

    [FunctionOutput]
    public class BARRACK_BUILD_TIMEOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class BUILDER_HUTOutputDTO : BUILDER_HUTOutputDTOBase { }

    [FunctionOutput]
    public class BUILDER_HUTOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class BUILDER_HUT_BUILD_TIMEOutputDTO : BUILDER_HUT_BUILD_TIMEOutputDTOBase { }

    [FunctionOutput]
    public class BUILDER_HUT_BUILD_TIMEOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class BuildTimeOutputDTO : BuildTimeOutputDTOBase { }

    [FunctionOutput]
    public class BuildTimeOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class BuilderStatusOutputDTO : BuilderStatusOutputDTOBase { }

    [FunctionOutput]
    public class BuilderStatusOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class CAMPOutputDTO : CAMPOutputDTOBase { }

    [FunctionOutput]
    public class CAMPOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class CAMP_BUILD_TIMEOutputDTO : CAMP_BUILD_TIMEOutputDTOBase { }

    [FunctionOutput]
    public class CAMP_BUILD_TIMEOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class CANNONOutputDTO : CANNONOutputDTOBase { }

    [FunctionOutput]
    public class CANNONOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class CANNON_BUILD_TIMEOutputDTO : CANNON_BUILD_TIMEOutputDTOBase { }

    [FunctionOutput]
    public class CANNON_BUILD_TIMEOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class GEM_BOXOutputDTO : GEM_BOXOutputDTOBase { }

    [FunctionOutput]
    public class GEM_BOXOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class GEM_BOX_BUILD_TIMEOutputDTO : GEM_BOX_BUILD_TIMEOutputDTOBase { }

    [FunctionOutput]
    public class GEM_BOX_BUILD_TIMEOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class GOLD_BOXOutputDTO : GOLD_BOXOutputDTOBase { }

    [FunctionOutput]
    public class GOLD_BOXOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class GOLD_BOX_BUILD_TIMEOutputDTO : GOLD_BOX_BUILD_TIMEOutputDTOBase { }

    [FunctionOutput]
    public class GOLD_BOX_BUILD_TIMEOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class IsBuildingOutputDTO : IsBuildingOutputDTOBase { }

    [FunctionOutput]
    public class IsBuildingOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("bool", "", 1)]
        public virtual bool ReturnValue1 { get; set; }
    }

    public partial class NOXOutputDTO : NOXOutputDTOBase { }

    [FunctionOutput]
    public class NOXOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class TOWEROutputDTO : TOWEROutputDTOBase { }

    [FunctionOutput]
    public class TOWEROutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class TOWER_BUILD_TIMEOutputDTO : TOWER_BUILD_TIMEOutputDTOBase { }

    [FunctionOutput]
    public class TOWER_BUILD_TIMEOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class BalanceOfOutputDTO : BalanceOfOutputDTOBase { }

    [FunctionOutput]
    public class BalanceOfOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class BalanceOfBatchOutputDTO : BalanceOfBatchOutputDTOBase { }

    [FunctionOutput]
    public class BalanceOfBatchOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("uint256[]", "", 1)]
        public virtual List<BigInteger> ReturnValue1 { get; set; }
    }



    public partial class GetAssetsOutputDTO : GetAssetsOutputDTOBase { }

    [FunctionOutput]
    public class GetAssetsOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("string[]", "", 1)]
        public virtual List<string> ReturnValue1 { get; set; }
    }

    public partial class GetCurrentlyBuildingAssetOutputDTO : GetCurrentlyBuildingAssetOutputDTOBase { }

    [FunctionOutput]
    public class GetCurrentlyBuildingAssetOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }



    public partial class IsApprovedForAllOutputDTO : IsApprovedForAllOutputDTOBase { }

    [FunctionOutput]
    public class IsApprovedForAllOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("bool", "", 1)]
        public virtual bool ReturnValue1 { get; set; }
    }

    public partial class IsBuilderFreeOutputDTO : IsBuilderFreeOutputDTOBase { }

    [FunctionOutput]
    public class IsBuilderFreeOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("bool", "", 1)]
        public virtual bool ReturnValue1 { get; set; }
    }







    public partial class SupportsInterfaceOutputDTO : SupportsInterfaceOutputDTOBase { }

    [FunctionOutput]
    public class SupportsInterfaceOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("bool", "", 1)]
        public virtual bool ReturnValue1 { get; set; }
    }

    public partial class UriOutputDTO : UriOutputDTOBase { }

    [FunctionOutput]
    public class UriOutputDTOBase : IFunctionOutputDTO
    {
        [Parameter("string", "", 1)]
        public virtual string ReturnValue1 { get; set; }
    }

